install.packages("xlsx")
install.packages("quantmod")
#Reading CSVs
location1 <- "D:/data.csv"
location1 <- "D:/data.csv"
df1.participant <- data.frame(participant_name,participant_qualification,participant_income,participant_sport)
#Data Frame
df1.participant <- data.frame(participant_name, participant_qualification, participant_income, participant_sport)
location1 <- "D:/Myfile.csv"
temp_value <- read.table(file = location1,
sep = ",",
header = TRUE)
temp_value <- read.table(file = location1,sep = ",",header = T)
temp_value <- read.table(file = location1,sep = ",",header = T)
location1 <- "D:/Myfile.csv"
temp_value <- read.table(file = location1,sep = ",",header =T)
View(temp_value)
#enter text file means end if document
read.csv(location1)
mynewfile <- read.csv(location1)
View(mynewfile)
locationtemp <- "D:/nifty_values.csv"
nifty_values <- read.csv(locationtemp)
View(nifty_values)
head(nifty_values)
tail(nifty_values)
install.packages("xlsx")
#reading excel file
install.packages("xlsx")
library(xlsx)
location2 <- "D:/nifty_values.xlsx"
nifty_excel <- read.xlsx(, location2,
sheetindex = 1)
library(xlsx)
nifty_excel <- read.xlsx(, location2,
sheetIndex = 1)
#reading website data
install.packages("quantmod")
library(quantmod)
nifty_yahoo <- getSymbols("^NSEI")
View(NSEI)
head(nifty_yahoo)
tail(nifty_yahoo)
df1.participant
participant_name <- c("ANil", "Badri", "Chetna", "Dinesh", "Elisa")
participant_name
participant_qualification
participant_income <- c(60000, 100000, 45000, NA, 70000)
participant_sport <- c("Hk", "Cr", "BB", "Hk", "BB")
#Data Frame
df1.participant <- data.frame(participant_name, participant_qualification, participant_income, participant_sport)
participant_qualification <- c("UG", "PG", "PHD")
#Data Frame
df1.participant <- data.frame(participant_name, participant_qualification, participant_income, participant_sport)
summarise(p_xtreme, median(degree_p))
path <- "D:/Placement_Data_Class.csv"
placement <- read.csv(path)
class(placement)
colnames(placement)
head(placement)
str(placement)
levels(placement$degree_t)
levels(placement$degree_t) <- c("CM","OT","ST")
levels(placement$degree_t)
#filter() function to pick rows
filter(placement, degree_t == "CM",
degree_p >= 80)
filter(placement, degree_t == "CM",
degree_p >= 80,
gender != "M")
filter(placement, degree_t == "CM",
degree_p >= 80 | degree_p <=55)
filter(placement, degree_t == "CM",
degree_p >= 80 | degree_p <=55,
gender != "F")
# create a subset of the main data
p_xtreme <- filter(placement, degree_p >=85 | degree_p <=52)
p_xtreme
install.packages("dplyr")
library(dplyr)
# create a subset of the main data
p_xtreme <- filter(placement, degree_p >=85 | degree_p <=52)
p_xtreme
# arrange () function to reorder the rows
arrange(p_xtreme, etest_p)
arrange(p_xtreme, desc(ssc_p))
arrange(p_xtreme, gender, desc(ssc_p))
#select() function to pick variables
select(p_xtreme, ssc_p, hsc_p, degree_p)
select(p_xtreme, ssc_p:degree_p)
select(p_xtreme, -(ssc_p:degree_p))
select(p_xtreme, ends_with("_p"))
select(p_xtreme, starts_with("h"))
select(p_xtreme, contains("_"))
rename(p_xtreme, gen = gender)
select(p_xtreme, 1:3)
# to create new variables
mutate(p_xtreme, avg_p = (ssc_p + hsc_p + degree_p)/3)
transmute(p_xtreme, avg_p = (ssc_p + hsc_p + degree_p)/3)
# summary of the variable
summarise(p_xtreme, mean(degree_p))
summarise(group_by(p_xtreme, degree_t), mean(degree_p))
summarise(p_xtreme, median(degree_p))
# select a random sample
sample_n(placement, size = 10)
set.seed(100)
sample_n(placement, size = 10)
sample_n(placement, size = 2)
set.seed(25)
set.seed(25)sample_n(placement, size = 2)
sample_n(placement, size = 2)
set.seed(25)
sample_n(placement, size = 2)
library(dplyr)
library(ggplot2)
path <- "D:/Placement_Data_Full_Class.csv"
placementds <- read.csv(path)
View(placementds)
colnames(placementds)
placementds$sl_no <- NULL
colnames(placementds)
#Module 4
# split the dataset
placementnum <- select(placementds, ends_with("_p"),salary)
View(placementnum)
placementcat <- select(placementds, -(ends_with("_p")),
-salary)
View(placementcat)
placedset <- filter(placementds, status =="Placed")
View(placedset)
levels(placementds$status)
placedset <- na.omit(placementds)
placedset <- na.omit(placementds)
notplacedset <- subset(placementds, status == "Not Placed")
# Explore
class(placementds)
anyNA(placementds)
colSums(is.na(placementds))
lapply(placementds, anyNA)
str(placementds)
unique(placementds$degree_t)
levels(placementds$ssc_b)
# summary statistics
# measures of central tendency
mean(placementnum$degree_p)
placementds %>% group_by(degree_t)
placementds %>% group_by(degree_t) %>% summarise(mean(degree_p))
group_by(placementds, degree_t, status) %>% summarise(mean(degree_p))
aggregate(degree_p ~ status + degree_t, placementds, FUN = mean)
sapply(placementnum, mean)
apply(placementnum, 2, mean)
apply(placementnum, 1, mean)
lapply(placementnum, mean)
tapply(placementds$degree_p, placementds$gender, mean)
# median
median(placementnum$salary, na.rm = T)
median(placementnum)
median(placementnum$salary)
quantile(placementnum$salary, na.rm = T)
quantile(placementnum$salary, 0.25, na.rm = T)
quantile(placementnum$salary, 0.1, na.rm = T)
fivenum(placementnum$salary, na.rm = T)
# Mode
lsr::modeOf(placementnum$salary)
# Mode
install.packages("lsr")
lsr::modeOf(placementnum$salary)
# other means
colMeans(placementnum)
rowMeans(placementnum[, -6])
mean(placementnum$salary, na.rm = T)
median(placementnum$salary, na.rm = T)
mean(placementnum$salary, trim = 0.10, na.rm = T)
# Data Types
class(x1)
# Variables
# Assign a value to a variable
x1 <- 2
x2 <- -4
x2
(x3 <- 1:5)
x4 <- x5 <- 3
assign("x6", 9)
x7 <- "Hello World"
print(x7)
x8 <- 5.5
x1 <- 3.5
x9 <- 5L # L is used to indicate integer
x10 <- seq(1:5)
x10
my_marks_in_r <- 75
# remove a variable
rm(x5)
x5 # understand the error
# use the created variables/objects in calculations
x1 + x2
my_sum <- x8 + x9
print(my_sum)
x9 * 5
# Data Types
class(x1)
class(x9)
class(x7)
typeof(x10)
is.numeric(x2)
# Alternate way of handling character data
my_name <- factor("Nijara Das")
class(my_name)
my_name
x7
# Dates
today_date <- as.Date("2020-02-11")
today_date
class(today_date)
today_date + 7
# Logical
is_r_easy <- TRUE
class(is_r_easy)
2 > 3
1 + 1 == 3
1/49 * 49 == 1
# Built in Functions
# Numeric Functions
abs(-4.5)
sqrt(16)
ceiling(-4.565)
floor(4.565)
trunc(4.565)
ceiling(-4.565)
floor(-4.565)
trunc(-4.565)
round(4.565)
round(4.565, digits = 2)
round(-4.565)
round(-4.1)
signif(4.565, digits = 2)
log(10)
exp(1)
factorial(3)
# Character Functions
word <- "programmingwithR"
substr(word, start = 12, stop = 15)
substr(word, start = 12, stop = 15) <- "thru"
word
word_1 <- "Split the words in a sentence"
strsplit(word_1, "")
full_name <- "Nijara Das"
strsplit(full_name, "")
strsplit(full_name, "")[[1]][[1]]
rating <- c("A", "B", "A+", "AA", "C")
grep("A", rating)
news <- ("The traffic in bangalore is chaotic. Bangalore is an IT city")
sub("bangalore", "Bengaluru", news)
gsub("Bangalore", "Bengaluru", news)
toupper(news)
tolower(news)
